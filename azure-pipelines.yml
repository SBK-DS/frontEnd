# azure-pipelines.yml
trigger:
  branches:
    include:
      - main
      - master

pool:
  vmImage: 'ubuntu-latest'

steps:

  - script: |
      docker build -t flutter-app .
    displayName: 'Build Docker Image'
  
  - script: |
      docker run --name flutter-build-container -v $(pwd):/app -w /app flutter-app flutter build apk
    displayName: 'Build APK'

  # Step 3: Copy APK from Docker Container to Host Machine
  - script: |
      docker cp flutter-build-container:/app/build/app/outputs/flutter-apk/app-release.apk $(System.DefaultWorkingDirectory)/app-release.apk
      docker rm flutter-build-container
    displayName: 'Copy APK from Docker Container'

  # Step 4: Verify APK is in the correct path
  - script: |
      ls -la $(System.DefaultWorkingDirectory)/app-release.apk
    displayName: 'Verify APK Path'

  # Step 5: Publish APK as Artifact
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/app-release.apk'
      artifactName: 'apk'
    displayName: 'Publish APK Artifact'
