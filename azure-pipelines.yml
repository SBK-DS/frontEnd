trigger:
  branches:
    include:
      - main
      - master

pool:
  vmImage: 'ubuntu-latest'

steps:

  - task: DownloadSecureFile@1
    displayName: 'Download Keystore File'
    inputs:
      secureFile: 'flutter-devops.jks'

  - script: |
      echo "storePassword=$(storePassword)" > key.properties
      echo "keyPassword=$(keyPassword)" >> key.properties
      echo "keyAlias=$(keyAlias)" >> key.properties
      echo "storeFile=$(System.DefaultWorkingDirectory)/flutter-devops.jks" >> key.properties
    displayName: 'Create key.properties File'

  - script: |
      docker build -t flutter-app .
    displayName: 'Build Docker Image'
  
  - script: |
      docker run --name flutter-build-container -v $(pwd):/app -w /app flutter-app flutter build appbundle
    displayName: 'Build App Bundle'

  - script: |
      docker run --rm flutter-app openssl version
      docker run --rm flutter-app flutter --version
    displayName: 'Check OpenSSL and Flutter Version'

  # Step 3: Copy Bundle from Docker Container to Host Machine
  - script: |
      docker cp flutter-build-container:/app/build/app/outputs/bundle/release/app-release.aab $(System.DefaultWorkingDirectory)/app-release.aab
      docker rm flutter-build-container
    displayName: 'Copy Bundle from Docker Container'

  # Step 4: Verify Bundle is in the correct path
  - script: |
      ls -la $(System.DefaultWorkingDirectory)/app-release.aab
    displayName: 'Verify Bundle Path'

  # Step 5: Publish Bundle as Artifact
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/app-release.aab'
      artifactName: 'drop'
    displayName: 'Publish Bundle Artifact'

  - task: DownloadSecureFile@1
    displayName: 'Download Playstore API secure file'
    inputs:
      secureFile: 'devops.json'

  - script: |
      mkdir -p $(System.DefaultWorkingDirectory)/devopsJson
      cp $(Agent.TempDirectory)/devops.json $(System.DefaultWorkingDirectory)/devopsJson/devops.json
    displayName: 'Move devops.json to devopsJson'
  
  - script: |
      jq '.SHA1Key |= "28:C2:AF:30:04:9C:17:DF:E7:BB:B2:B7:77:5A:32:90:4E:02:D7:25"' $(System.DefaultWorkingDirectory)/devopsJson/devops.json > $(System.DefaultWorkingDirectory)/devopsJson/modified_devops.json
      mv $(System.DefaultWorkingDirectory)/devopsJson/modified_devops.json $(System.DefaultWorkingDirectory)/devopsJson/devops.json
    displayName: 'Add SHA1 Key to devops.json'

  # Publish devops.json as a build artifact
  - task: PublishBuildArtifacts@1
    displayName: 'Publish devops.json Artifact'
    inputs:
      pathtoPublish: $(System.DefaultWorkingDirectory)/devopsJson
      artifactName: 'devopsjson'
